name: ecs.storage.development deploy

env:
  ENV: alpha
  AWS_REGION: ap-northeast-2

on:
  push:
    paths:
      - 'ecs/storage/**'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./ecs/storage/task-definition.json
          container-name: 컨테이너이름
          image: ${{ steps.build-image.outputs.image }}

      - name: load task-definition.json
        run: |
          HELLO=(`cat ./ecs/storage/task-definition.json`)
          echo "::set-out name=task_definition::${HELLO}"
        id: load_task_definition_json

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.load_task_definition_json.outputs.task_definition }}
          service: storage
          cluster: pickstudio-development
          wait-for-service-stability: true